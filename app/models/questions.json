[{
    "question": "Describe what a closure is.",
    "type": "text",
    "answer": "When an outer function returns an inner function that uses a variable from from the outer function, the inner function still has access to the function in the outer scope even after the outer function has returned (executed).",
    "lang": "js",
    "details" : ""
},
{
    "question": "Give an example of a closure with explanation",
    "type": "code",
    "answer": "// The Module Pattern is a common and practical example:\n\nvar Module = (function () {\n\tvar name = 'private';\n\tfunction getName() {\n\t\treturn name;\n\t}\n\treturn {\n\t\tgetName: getName\n\t};\n})();\nconsole.log(Module.getName());\t// 'private'",
    "lang": "js",
    "details" : ""
},
{
    "question": "What is a drawback to using a bunch of closures?",
    "type": "text",
    "answer": "Memory consumption. Since a closure holds a reference to the outer function's variable, it can't be garbage collected.",
    "lang": "js",
    "details" : ""
},
{
    "question": "Provide example code for how you would go about inserting an HTML node into the DOM tree using JavaScript.",
    "type": "code",
    "answer": "var el = document.createElement('div');\nel.innerHTML = 'Some content';\ndocument.body.appendChild(el);",
    "lang": "js",
    "details" : ""
},
{
    "question": "How do you make a method chainable?",
    "type": "code",
    "answer": "return this;",
    "lang": "js",
    "details" : ""  
}]

